[{"D:\\Projects\\SHM2.0\\frontend\\src\\index.js":"1","D:\\Projects\\SHM2.0\\frontend\\src\\reportWebVitals.js":"2","D:\\Projects\\SHM2.0\\frontend\\src\\App.js":"3","D:\\Projects\\SHM2.0\\frontend\\src\\component\\Logout.js":"4","D:\\Projects\\SHM2.0\\frontend\\src\\component\\Welcome.js":"5","D:\\Projects\\SHM2.0\\frontend\\src\\component\\Navbar.js":"6","D:\\Projects\\SHM2.0\\frontend\\src\\component\\Signup.js":"7","D:\\Projects\\SHM2.0\\frontend\\src\\component\\recruiter\\Profile.js":"8","D:\\Projects\\SHM2.0\\frontend\\src\\component\\Home.js":"9","D:\\Projects\\SHM2.0\\frontend\\src\\component\\Login.js":"10","D:\\Projects\\SHM2.0\\frontend\\src\\component\\Applications.js":"11","D:\\Projects\\SHM2.0\\frontend\\src\\component\\Profile.js":"12","D:\\Projects\\SHM2.0\\frontend\\src\\component\\recruiter\\MyJobs.js":"13","D:\\Projects\\SHM2.0\\frontend\\src\\lib\\MessagePopup.js":"14","D:\\Projects\\SHM2.0\\frontend\\src\\component\\recruiter\\JobApplications.js":"15","D:\\Projects\\SHM2.0\\frontend\\src\\component\\recruiter\\CreateJobs.js":"16","D:\\Projects\\SHM2.0\\frontend\\src\\lib\\isAuth.js":"17","D:\\Projects\\SHM2.0\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js":"18","D:\\Projects\\SHM2.0\\frontend\\src\\lib\\PasswordInput.js":"19","D:\\Projects\\SHM2.0\\frontend\\src\\lib\\FileUploadInput.js":"20","D:\\Projects\\SHM2.0\\frontend\\src\\lib\\apiList.js":"21","D:\\Projects\\SHM2.0\\frontend\\src\\lib\\EmailInput.js":"22","D:\\Projects\\SHM2.0\\frontend\\src\\component\\recruiter\\searchResume.js":"23"},{"size":517,"mtime":1670763516755,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1670763516818,"results":"26","hashOfConfig":"25"},{"size":3869,"mtime":1672480570434,"results":"27","hashOfConfig":"25"},{"size":509,"mtime":1670763516593,"results":"28","hashOfConfig":"25"},{"size":775,"mtime":1672258134450,"results":"29","hashOfConfig":"25"},{"size":2782,"mtime":1670766506440,"results":"30","hashOfConfig":"25"},{"size":14343,"mtime":1671386972132,"results":"31","hashOfConfig":"25"},{"size":5257,"mtime":1672488330610,"results":"32","hashOfConfig":"25"},{"size":25976,"mtime":1672486554856,"results":"33","hashOfConfig":"25"},{"size":3984,"mtime":1672471098613,"results":"34","hashOfConfig":"25"},{"size":7775,"mtime":1672486741142,"results":"35","hashOfConfig":"25"},{"size":9764,"mtime":1672480840006,"results":"36","hashOfConfig":"25"},{"size":27025,"mtime":1672486460152,"results":"37","hashOfConfig":"25"},{"size":523,"mtime":1670763516785,"results":"38","hashOfConfig":"25"},{"size":23515,"mtime":1672482519050,"results":"39","hashOfConfig":"25"},{"size":8333,"mtime":1672488239837,"results":"40","hashOfConfig":"25"},{"size":174,"mtime":1670763516811,"results":"41","hashOfConfig":"25"},{"size":25012,"mtime":1672486253774,"results":"42","hashOfConfig":"25"},{"size":1724,"mtime":1670763516794,"results":"43","hashOfConfig":"25"},{"size":3392,"mtime":1670763516774,"results":"44","hashOfConfig":"25"},{"size":452,"mtime":1670763516803,"results":"45","hashOfConfig":"25"},{"size":1210,"mtime":1670763516763,"results":"46","hashOfConfig":"25"},{"size":2789,"mtime":1670769921894,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gtdsc",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\SHM2.0\\frontend\\src\\index.js",[],"D:\\Projects\\SHM2.0\\frontend\\src\\reportWebVitals.js",[],"D:\\Projects\\SHM2.0\\frontend\\src\\App.js",["97"],"D:\\Projects\\SHM2.0\\frontend\\src\\component\\Logout.js",["98"],"D:\\Projects\\SHM2.0\\frontend\\src\\component\\Welcome.js",[],"D:\\Projects\\SHM2.0\\frontend\\src\\component\\Navbar.js",[],"D:\\Projects\\SHM2.0\\frontend\\src\\component\\Signup.js",["99","100","101","102"],"D:\\Projects\\SHM2.0\\frontend\\src\\component\\recruiter\\Profile.js",["103","104","105"],"D:\\Projects\\SHM2.0\\frontend\\src\\component\\Home.js",["106","107","108","109","110","111","112"],"D:\\Projects\\SHM2.0\\frontend\\src\\component\\Login.js",["113"],"D:\\Projects\\SHM2.0\\frontend\\src\\component\\Applications.js",["114","115","116","117","118","119","120","121","122"],"D:\\Projects\\SHM2.0\\frontend\\src\\component\\Profile.js",["123","124","125","126","127","128","129"],"import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Modal,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n  Avatar\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport FileUploadInput from \"../lib/FileUploadInput\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList, { server } from \"../lib/apiList\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst MultifieldInput = (props) => {\r\n  const classes = useStyles();\r\n  const { education, setEducation } = props;\r\n\r\n  return (\r\n    <>\r\n      {education.map((obj, key) => (\r\n        <Grid item container className={classes.inputBox} key={key}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label={`Institution Name #${key + 1}`}\r\n              value={education[key].institutionName}\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].institutionName = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"Start Year\"\r\n              value={obj.startYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].startYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"End Year\"\r\n              value={obj.endYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].endYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n      <Grid item style={{ alignSelf: \"center\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() =>\r\n            setEducation([\r\n              ...education,\r\n              {\r\n                institutionName: \"\",\r\n                startYear: \"\",\r\n                endYear: \"\",\r\n              },\r\n            ])\r\n          }\r\n          className={classes.inputBox}\r\n        >\r\n          Add another institution details\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [userData, setUserData] = useState();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [profileDetails, setProfileDetails] = useState({\r\n    name: \"\",\r\n    education: [],\r\n    skills: [],\r\n    resume: \"\",\r\n    profile: \"\",\r\n  });\r\n\r\n  const [education, setEducation] = useState([\r\n    {\r\n      institutionName: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleInput = (key, value) => {\r\n    setProfileDetails({\r\n      ...profileDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.user, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setProfileDetails(response.data)\r\n        if (response.data.education.length > 0) {\r\n          setEducation(\r\n            response.data.education.map((edu) => ({\r\n              institutionName: edu.institutionName ? edu.institutionName : \"\",\r\n              startYear: edu.startYear ? edu.startYear : \"\",\r\n              endYear: edu.endYear ? edu.endYear : \"\",\r\n            }))\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const editDetails = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n\r\n\r\n    let updatedDetails = {\r\n      ...profileDetails,\r\n      education: education\r\n        .filter((obj) => obj.institutionName.trim() !== \"\")\r\n        .map((obj) => {\r\n          if (obj[\"endYear\"] === \"\") {\r\n            delete obj[\"endYear\"];\r\n          }\r\n          return obj;\r\n        }),\r\n    };\r\n    console.log(\"Updated obj\", updatedDetails);\r\n    axios\r\n      .put(apiList.user, updatedDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Grid style={{ paddingBottom: '20px' }}></Grid>\r\n        <Paper elevation={3} style={{ opacity: 0.9 }}>\r\n          <Grid\r\n            container\r\n            item\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h3\">Profile</Typography>\r\n            </Grid>\r\n            <Grid style={{ paddingTop: '50px', paddingBottom: '50px' }}>\r\n              <Avatar alt=\"profileimage\" style={{ width: '15rem', height: '15rem' }} src={`${server}${profileDetails.profile}`} />\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Paper\r\n                elevation={2}\r\n                style={{\r\n                  padding: \"20px\",\r\n                  outline: \"none\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\r\n                  <Grid item>\r\n                    <TextField\r\n                      label=\"Name\"\r\n                      value={profileDetails.name}\r\n                      onChange={(event) => handleInput(\"name\", event.target.value)}\r\n                      className={classes.inputBox}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n                  <MultifieldInput\r\n                    education={education}\r\n                    setEducation={setEducation}\r\n                  />\r\n                  <Grid item>\r\n                    <ChipInput\r\n                      className={classes.inputBox}\r\n                      label=\"Skills\"\r\n                      variant=\"outlined\"\r\n                      helperText=\"Press enter to add skills\"\r\n                      value={profileDetails.skills}\r\n                      onAdd={(chip) =>\r\n                        setProfileDetails({\r\n                          ...profileDetails,\r\n                          skills: [...profileDetails.skills, chip],\r\n                        })\r\n                      }\r\n                      onDelete={(chip, index) => {\r\n                        let skills = profileDetails.skills;\r\n                        skills.splice(index, 1);\r\n                        setProfileDetails({\r\n                          ...profileDetails,\r\n                          skills: skills,\r\n                        });\r\n                      }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n                  <Grid>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FileUploadInput\r\n                      className={classes.inputBox}\r\n                      label=\"Update Resume (.pdf)\"\r\n                      icon={<DescriptionIcon />}\r\n                      uploadTo={apiList.uploadResume}\r\n                      handleInput={handleInput}\r\n                      identifier={\"resume\"}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <FileUploadInput\r\n                      className={classes.inputBox}\r\n                      label=\"Update Profile Photo (.jpg/.png)\"\r\n                      icon={<FaceIcon />}\r\n                      uploadTo={apiList.uploadProfileImage}\r\n                      handleInput={handleInput}\r\n                      identifier={\"profile\"}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n                  onClick={() => handleUpdate()}\r\n                >\r\n                  Update Details\r\n                </Button>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      <Grid style={{ paddingBottom: '20px' }}></Grid>\r\n      {/* <Modal open={open} onClose={handleClose} className={classes.popupDialog}> */}\r\n\r\n      {/* </Modal> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n",["130","131"],"D:\\Projects\\SHM2.0\\frontend\\src\\component\\recruiter\\MyJobs.js",["132","133","134","135","136","137","138"],"D:\\Projects\\SHM2.0\\frontend\\src\\lib\\MessagePopup.js",["139"],"D:\\Projects\\SHM2.0\\frontend\\src\\component\\recruiter\\JobApplications.js",["140","141","142","143","144","145"],"import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList, { server } from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  CustomBtn:{\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Application Status\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"rejected\"\r\n                      checked={searchOptions.status.rejected}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Rejected\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"applied\"\r\n                      checked={searchOptions.status.applied}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Applied\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"shortlisted\"\r\n                      checked={searchOptions.status.shortlisted}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Shortlisted\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"name\"\r\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"name\">\r\n                    <Typography>Name</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"dateOfApplication\"\r\n                    checked={searchOptions.sort.dateOfApplication.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfApplication: {\r\n                            ...searchOptions.sort.dateOfApplication,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"dateOfApplication\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"dateOfApplication\">\r\n                    <Typography>Date of Application</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.dateOfApplication.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfApplication: {\r\n                            ...searchOptions.sort.dateOfApplication,\r\n                            desc: !searchOptions.sort.dateOfApplication.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.dateOfApplication.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\r\n                              .desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ApplicationTile = (props) => {\r\n  console.log(\"PROPS\",{props})\r\n  const classes = useStyles();\r\n  const { application, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  const getResume = () => {\r\n    if (\r\n      application.jobApplicant.resume &&\r\n      application.jobApplicant.resume !== \"\"\r\n    ) {\r\n      const address = `${server}${application.jobApplicant.resume}`;\r\n      console.log(address);\r\n      axios(address, {\r\n        method: \"GET\",\r\n        responseType: \"blob\",\r\n      })\r\n        .then((response) => {\r\n          const file = new Blob([response.data], { type: \"application/pdf\" });\r\n          const fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Error\",\r\n          });\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"No resume found\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateStatus = (status) => {\r\n    const address = `${apiList.applications}/${application._id}`;\r\n    const statusData = {\r\n      status: status,\r\n      dateOfJoining: new Date().toISOString(),\r\n    };\r\n    axios\r\n      .put(address, statusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const buttonSet = {\r\n    applied: (\r\n      <>\r\n        {/* <Grid item xs> */}\r\n          <Button\r\n            // className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"shortlisted\"],\r\n              color: \"#ffffff\",\r\n              float:'right'\r\n            }}\r\n            onClick={() => updateStatus(\"shortlisted\")}\r\n          >\r\n            Shortlist\r\n          </Button>\r\n        {/* </Grid>\r\n        <Grid item xs> */}\r\n          <Button\r\n            // className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n              float:'right',\r\n              marginLeft:'5px'\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        {/* </Grid> */}\r\n      </>\r\n    ),\r\n    shortlisted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"accepted\")}\r\n          >\r\n            Accept\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n              marginLeft:'5px'\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    rejected: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Rejected\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    accepted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Accepted\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    cancelled: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"cancelled\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Cancelled\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    finished: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"finished\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Finished\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <Paper style={{marginLeft:'23%',width:'55%',paddingBottom:'40px'}} className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={3}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={`${server}${application.jobApplicant.profile}`}\r\n            className={classes.avatar}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={7} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">\r\n              {application.jobApplicant.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating\r\n              value={\r\n                application.jobApplicant.rating !== -1\r\n                  ? application.jobApplicant.rating\r\n                  : null\r\n              }\r\n              readOnly\r\n            />\r\n          </Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>\r\n            Education:{\" \"}\r\n            {application.jobApplicant.education\r\n              .map((edu) => {\r\n                return `${edu.institutionName} (${edu.startYear}-${\r\n                  edu.endYear ? edu.endYear : \"Ongoing\"\r\n                })`;\r\n              })\r\n              .join(\", \")}\r\n          </Grid>\r\n          <Grid item>\r\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.jobApplicant.skills.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid xs={12} item style={{marginBottom:'70px'}}></Grid>\r\n        <Grid xs={6}></Grid>\r\n          <Grid item xs={3} style={{marginRight:'5px'}}>\r\n            <Button\r\n              style={{float:'right'}}\r\n              variant=\"contained\"\r\n              // className={classes.CustomBtn}\r\n              color=\"primary\"\r\n              onClick={() => getResume()}\r\n            >\r\n              Download Resume\r\n            </Button>\r\n          </Grid>\r\n          <Grid item container xs>\r\n            {buttonSet[application.status]}\r\n          </Grid>\r\n        \r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            // onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst JobApplications = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n  const { jobId } = useParams();\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    status: {\r\n      all: false,\r\n      applied: false,\r\n      shortlisted: false,\r\n    },\r\n    sort: {\r\n      \"jobApplicant.name\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      dateOfApplication: {\r\n        status: true,\r\n        desc: true,\r\n      },\r\n      \"jobApplicant.rating\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n\r\n    if (searchOptions.status.rejected) {\r\n      searchParams = [...searchParams, `status=rejected`];\r\n    }\r\n    if (searchOptions.status.applied) {\r\n      searchParams = [...searchParams, `status=applied`];\r\n    }\r\n    if (searchOptions.status.shortlisted) {\r\n      searchParams = [...searchParams, `status=shortlisted`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = `${apiList.applicants}?jobId=${jobId}`;\r\n    if (queryString !== \"\") {\r\n      address = `${address}&${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // console.log(err.response.data);\r\n        setApplications([]);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Applications</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton onClick={() => setFilterOpen(true)}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          style={{ width: \"100%\" }}\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {applications.length > 0 ? (\r\n            applications.map((obj) => (\r\n              <Grid item>\r\n                {/* {console.log(obj)} */}\r\n                <ApplicationTile application={obj} getData={getData} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No Applications Found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobApplications;\r\n","D:\\Projects\\SHM2.0\\frontend\\src\\component\\recruiter\\CreateJobs.js",["146","147","148"],"D:\\Projects\\SHM2.0\\frontend\\src\\lib\\isAuth.js",[],"D:\\Projects\\SHM2.0\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js",["149","150","151","152","153","154","155","156","157"],"D:\\Projects\\SHM2.0\\frontend\\src\\lib\\PasswordInput.js",[],"D:\\Projects\\SHM2.0\\frontend\\src\\lib\\FileUploadInput.js",[],"D:\\Projects\\SHM2.0\\frontend\\src\\lib\\apiList.js",[],"D:\\Projects\\SHM2.0\\frontend\\src\\lib\\EmailInput.js",[],"D:\\Projects\\SHM2.0\\frontend\\src\\component\\recruiter\\searchResume.js",["158","159","160","161","162","163","164","165","166","167","168"],{"ruleId":"169","severity":1,"message":"170","line":20,"column":8,"nodeType":"171","messageId":"172","endLine":20,"endColumn":14},{"ruleId":"173","severity":1,"message":"174","line":16,"column":6,"nodeType":"175","endLine":16,"endColumn":8,"suggestions":"176"},{"ruleId":"169","severity":1,"message":"177","line":10,"column":3,"nodeType":"171","messageId":"172","endLine":10,"endColumn":8},{"ruleId":"169","severity":1,"message":"178","line":136,"column":10,"nodeType":"171","messageId":"172","endLine":136,"endColumn":15},{"ruleId":"169","severity":1,"message":"179","line":136,"column":16,"nodeType":"171","messageId":"172","endLine":136,"endColumn":24},{"ruleId":"180","severity":1,"message":"181","line":471,"column":32,"nodeType":"182","messageId":"183","endLine":471,"endColumn":34},{"ruleId":"169","severity":1,"message":"184","line":6,"column":3,"nodeType":"171","messageId":"172","endLine":6,"endColumn":8},{"ruleId":"173","severity":1,"message":"185","line":53,"column":6,"nodeType":"175","endLine":53,"endColumn":8,"suggestions":"186"},{"ruleId":"180","severity":1,"message":"181","line":165,"column":34,"nodeType":"182","messageId":"183","endLine":165,"endColumn":36},{"ruleId":"169","severity":1,"message":"187","line":15,"column":3,"nodeType":"171","messageId":"172","endLine":15,"endColumn":12},{"ruleId":"169","severity":1,"message":"188","line":20,"column":8,"nodeType":"171","messageId":"172","endLine":20,"endColumn":18},{"ruleId":"180","severity":1,"message":"181","line":290,"column":32,"nodeType":"182","messageId":"183","endLine":290,"endColumn":34},{"ruleId":"173","severity":1,"message":"185","line":676,"column":6,"nodeType":"175","endLine":676,"endColumn":8,"suggestions":"189"},{"ruleId":"180","severity":1,"message":"181","line":692,"column":33,"nodeType":"182","messageId":"183","endLine":692,"endColumn":35},{"ruleId":"180","severity":1,"message":"181","line":698,"column":33,"nodeType":"182","messageId":"183","endLine":698,"endColumn":35},{"ruleId":"180","severity":1,"message":"181","line":704,"column":32,"nodeType":"182","messageId":"183","endLine":704,"endColumn":34},{"ruleId":"169","severity":1,"message":"190","line":4,"column":3,"nodeType":"171","messageId":"172","endLine":4,"endColumn":12},{"ruleId":"169","severity":1,"message":"191","line":6,"column":3,"nodeType":"171","messageId":"172","endLine":6,"endColumn":13},{"ruleId":"169","severity":1,"message":"192","line":7,"column":3,"nodeType":"171","messageId":"172","endLine":7,"endColumn":17},{"ruleId":"169","severity":1,"message":"190","line":10,"column":3,"nodeType":"171","messageId":"172","endLine":10,"endColumn":12},{"ruleId":"169","severity":1,"message":"193","line":13,"column":3,"nodeType":"171","messageId":"172","endLine":13,"endColumn":9},{"ruleId":"169","severity":1,"message":"194","line":14,"column":3,"nodeType":"171","messageId":"172","endLine":14,"endColumn":19},{"ruleId":"169","severity":1,"message":"187","line":15,"column":3,"nodeType":"171","messageId":"172","endLine":15,"endColumn":12},{"ruleId":"169","severity":1,"message":"195","line":16,"column":3,"nodeType":"171","messageId":"172","endLine":16,"endColumn":11},{"ruleId":"169","severity":1,"message":"196","line":17,"column":3,"nodeType":"171","messageId":"172","endLine":17,"endColumn":11},{"ruleId":"173","severity":1,"message":"185","line":234,"column":6,"nodeType":"175","endLine":234,"endColumn":8,"suggestions":"197"},{"ruleId":"169","severity":1,"message":"184","line":6,"column":3,"nodeType":"171","messageId":"172","endLine":6,"endColumn":8},{"ruleId":"169","severity":1,"message":"198","line":112,"column":10,"nodeType":"171","messageId":"172","endLine":112,"endColumn":18},{"ruleId":"169","severity":1,"message":"199","line":112,"column":20,"nodeType":"171","messageId":"172","endLine":112,"endColumn":31},{"ruleId":"169","severity":1,"message":"200","line":113,"column":10,"nodeType":"171","messageId":"172","endLine":113,"endColumn":14},{"ruleId":"173","severity":1,"message":"185","line":140,"column":6,"nodeType":"175","endLine":140,"endColumn":8,"suggestions":"201"},{"ruleId":"169","severity":1,"message":"202","line":172,"column":9,"nodeType":"171","messageId":"172","endLine":172,"endColumn":20},{"ruleId":"169","severity":1,"message":"203","line":176,"column":9,"nodeType":"171","messageId":"172","endLine":176,"endColumn":20},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"169","severity":1,"message":"187","line":15,"column":3,"nodeType":"171","messageId":"172","endLine":15,"endColumn":12},{"ruleId":"169","severity":1,"message":"188","line":21,"column":8,"nodeType":"171","messageId":"172","endLine":21,"endColumn":18},{"ruleId":"169","severity":1,"message":"208","line":27,"column":8,"nodeType":"171","messageId":"172","endLine":27,"endColumn":11},{"ruleId":"173","severity":1,"message":"185","line":723,"column":6,"nodeType":"175","endLine":723,"endColumn":8,"suggestions":"209"},{"ruleId":"180","severity":1,"message":"181","line":739,"column":33,"nodeType":"182","messageId":"183","endLine":739,"endColumn":35},{"ruleId":"180","severity":1,"message":"181","line":745,"column":33,"nodeType":"182","messageId":"183","endLine":745,"endColumn":35},{"ruleId":"180","severity":1,"message":"181","line":751,"column":32,"nodeType":"182","messageId":"183","endLine":751,"endColumn":34},{"ruleId":"169","severity":1,"message":"210","line":1,"column":20,"nodeType":"171","messageId":"172","endLine":1,"endColumn":25},{"ruleId":"169","severity":1,"message":"192","line":7,"column":3,"nodeType":"171","messageId":"172","endLine":7,"endColumn":17},{"ruleId":"169","severity":1,"message":"190","line":10,"column":3,"nodeType":"171","messageId":"172","endLine":10,"endColumn":12},{"ruleId":"169","severity":1,"message":"193","line":13,"column":3,"nodeType":"171","messageId":"172","endLine":13,"endColumn":9},{"ruleId":"169","severity":1,"message":"187","line":15,"column":3,"nodeType":"171","messageId":"172","endLine":15,"endColumn":12},{"ruleId":"169","severity":1,"message":"195","line":16,"column":3,"nodeType":"171","messageId":"172","endLine":16,"endColumn":11},{"ruleId":"173","severity":1,"message":"185","line":683,"column":6,"nodeType":"175","endLine":683,"endColumn":8,"suggestions":"211"},{"ruleId":"169","severity":1,"message":"212","line":1,"column":22,"nodeType":"171","messageId":"172","endLine":1,"endColumn":31},{"ruleId":"169","severity":1,"message":"213","line":5,"column":3,"nodeType":"171","messageId":"172","endLine":5,"endColumn":13},{"ruleId":"169","severity":1,"message":"184","line":6,"column":3,"nodeType":"171","messageId":"172","endLine":6,"endColumn":8},{"ruleId":"169","severity":1,"message":"192","line":7,"column":3,"nodeType":"171","messageId":"172","endLine":7,"endColumn":17},{"ruleId":"169","severity":1,"message":"190","line":10,"column":3,"nodeType":"171","messageId":"172","endLine":10,"endColumn":12},{"ruleId":"169","severity":1,"message":"193","line":13,"column":3,"nodeType":"171","messageId":"172","endLine":13,"endColumn":9},{"ruleId":"169","severity":1,"message":"194","line":14,"column":3,"nodeType":"171","messageId":"172","endLine":14,"endColumn":19},{"ruleId":"169","severity":1,"message":"187","line":15,"column":3,"nodeType":"171","messageId":"172","endLine":15,"endColumn":12},{"ruleId":"169","severity":1,"message":"195","line":16,"column":3,"nodeType":"171","messageId":"172","endLine":16,"endColumn":11},{"ruleId":"169","severity":1,"message":"214","line":20,"column":10,"nodeType":"171","messageId":"172","endLine":20,"endColumn":19},{"ruleId":"169","severity":1,"message":"215","line":450,"column":9,"nodeType":"171","messageId":"172","endLine":450,"endColumn":17},{"ruleId":"173","severity":1,"message":"185","line":716,"column":6,"nodeType":"175","endLine":716,"endColumn":8,"suggestions":"216"},{"ruleId":"169","severity":1,"message":"217","line":3,"column":5,"nodeType":"171","messageId":"172","endLine":3,"endColumn":11},{"ruleId":"169","severity":1,"message":"218","line":4,"column":5,"nodeType":"171","messageId":"172","endLine":4,"endColumn":9},{"ruleId":"169","severity":1,"message":"219","line":8,"column":5,"nodeType":"171","messageId":"172","endLine":8,"endColumn":15},{"ruleId":"169","severity":1,"message":"220","line":9,"column":5,"nodeType":"171","messageId":"172","endLine":9,"endColumn":10},{"ruleId":"169","severity":1,"message":"184","line":12,"column":5,"nodeType":"171","messageId":"172","endLine":12,"endColumn":10},{"ruleId":"169","severity":1,"message":"193","line":13,"column":5,"nodeType":"171","messageId":"172","endLine":13,"endColumn":11},{"ruleId":"169","severity":1,"message":"194","line":14,"column":5,"nodeType":"171","messageId":"172","endLine":14,"endColumn":21},{"ruleId":"169","severity":1,"message":"187","line":15,"column":5,"nodeType":"171","messageId":"172","endLine":15,"endColumn":14},{"ruleId":"169","severity":1,"message":"195","line":16,"column":5,"nodeType":"171","messageId":"172","endLine":16,"endColumn":13},{"ruleId":"169","severity":1,"message":"196","line":17,"column":5,"nodeType":"171","messageId":"172","endLine":17,"endColumn":13},{"ruleId":"169","severity":1,"message":"221","line":19,"column":8,"nodeType":"171","messageId":"172","endLine":19,"endColumn":22},"no-unused-vars","'isAuth' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPopup'. Either include it or remove the dependency array.","ArrayExpression",["222"],"'Input' is defined but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Modal' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["223"],"'FormGroup' is defined but never used.","'Pagination' is defined but never used.",["224"],"'TextField' is defined but never used.","'IconButton' is defined but never used.","'InputAdornment' is defined but never used.","'Slider' is defined but never used.","'FormControlLabel' is defined but never used.","'MenuItem' is defined but never used.","'Checkbox' is defined but never used.",["225"],"'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'open' is assigned a value but never used.",["226"],"'handleClose' is assigned a value but never used.","'editDetails' is assigned a value but never used.","no-native-reassign",["227"],"no-negated-in-lhs",["228"],"'Box' is defined but never used.",["229"],"'Slide' is defined but never used.",["230"],"'useEffect' is defined but never used.","'Typography' is defined but never used.","'useParams' is defined but never used.","'colorSet' is assigned a value but never used.",["231"],"'Button' is defined but never used.","'Chip' is defined but never used.","'makeStyles' is defined but never used.","'Paper' is defined but never used.","'FilterListIcon' is defined but never used.",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"234","fix":"236"},{"desc":"234","fix":"237"},{"desc":"234","fix":"238"},"no-global-assign","no-unsafe-negation",{"desc":"234","fix":"239"},{"desc":"234","fix":"240"},{"desc":"234","fix":"241"},"Update the dependencies array to be: [setPopup]",{"range":"242","text":"243"},"Update the dependencies array to be: [getData]",{"range":"244","text":"245"},{"range":"246","text":"245"},{"range":"247","text":"245"},{"range":"248","text":"245"},{"range":"249","text":"245"},{"range":"250","text":"245"},{"range":"251","text":"245"},[437,439],"[setPopup]",[1091,1093],"[getData]",[21284,21286],[6305,6307],[3566,3568],[22587,22589],[20487,20489],[22355,22357]]